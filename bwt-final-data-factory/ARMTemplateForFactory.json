{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bwt-final-data-factory"
		},
		"ls_adls_gen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_gen2'"
		},
		"ls_adls_gen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://bwtformula1storage.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_api_to_adls_parent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "web_act_limit",
						"description": "to get limit value",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "http://ergast.com/api/f1/seasons.json"
						}
					},
					{
						"name": "set_var_limit_value",
						"description": "this activity save limit value in variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "web_act_limit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "limit",
							"value": {
								"value": "@activity('web_act_limit').output.MRData.total",
								"type": "Expression"
							}
						}
					},
					{
						"name": "web_act_api_to_adls",
						"description": "this will get data from api to adls.",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "set_var_limit_value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('http://ergast.com/api/f1/seasons.json?limit=',variables('limit'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "for_each_to_iterate_season_value",
						"description": "this will iterate season value..",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "web_act_api_to_adls",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('web_act_api_to_adls').output.MRData.SeasonTable.Seasons",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "web_act3_race_data",
									"description": "This activity will get the data from API and store in ADLS Gen2 in JSON format",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "execute_child_pl",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@concat('http://ergast.com/api/f1/',item().season,'.json?limit=100')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "set_var_race_data",
									"description": "This activity will write races data into one string type variable.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "web_act3_race_data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "races_data",
										"value": {
											"value": "@{activity('web_act3_race_data').output.MRData.RaceTable.Races}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "copy_act_race_data",
									"description": "this will copy data from set variable to\n adls > bronze > races.",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "set_var_race_data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "mycolumn",
													"value": {
														"value": "@variables('races_data')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "mycolumn",
														"type": "String"
													},
													"sink": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_source_data",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SINK_RACES_SEASON_WISE_DATA",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "set_var_season_wise",
									"description": "this activity will write season value in one variable.",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "year_wise",
										"value": {
											"value": "@item().season",
											"type": "Expression"
										}
									}
								},
								{
									"name": "execute_child_pl",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "set_var_season_wise",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_race_result_round_wise_child",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"season_value_parameter": {
												"value": "@variables('year_wise')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "set_var_only_season_data",
						"description": "this will write data from API to one string variable..",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "web_act_api_to_adls",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "season_data_only",
							"value": {
								"value": "@{activity('web_act_api_to_adls').output.MRData.SeasonTable.Seasons}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "copy_act",
						"description": "This activity will write season data from set variable to adls in JSON format",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_var_only_season_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "mycolumn",
										"value": {
											"value": "@variables('season_data_only')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "mycolumn",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SINK_SEASONS_DATA_ONLY",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"limit": {
						"type": "String"
					},
					"races_data": {
						"type": "String"
					},
					"year_wise": {
						"type": "String"
					},
					"race_results": {
						"type": "String"
					},
					"file_name_season": {
						"type": "String"
					},
					"season_data_only": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-12T14:40:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_data')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_SEASONS_DATA_ONLY')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_RACES_SEASON_WISE_DATA')]",
				"[concat(variables('factoryId'), '/pipelines/pl_race_result_round_wise_child')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_drivers_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "web_act1_to_get_drivers",
						"description": "this wil get us drivers details",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://ergast.com/api/f1/drivers.json"
						}
					},
					{
						"name": "set_var1_drivers",
						"description": "This activity will set total page value into limit_var variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "web_act1_to_get_drivers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "limit_var",
							"value": {
								"value": "@activity('web_act1_to_get_drivers').output.MRData.total",
								"type": "Expression"
							}
						}
					},
					{
						"name": "web_act_to_get_drivers_data",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "set_var1_drivers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://ergast.com/api/f1/drivers.json?limit=',variables('limit_var'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_Drivers_Data_Set_variable1",
						"description": "This activity will set drivers data in variable.",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "web_act_to_get_drivers_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "drivers",
							"value": {
								"value": "@{activity('web_act_to_get_drivers_data').output.MRData.DriverTable.Drivers}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_Copy_data_from_API_to_ADLS_GEN_2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "act_Drivers_Data_Set_variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "mycolumn",
										"value": {
											"value": "@variables('drivers')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "mycolumn",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SINK_DRIVERS_DATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"limit_var": {
						"type": "String"
					},
					"drivers": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T15:23:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_data')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_DRIVERS_DATA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_race_result_round_wise_child')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "web_act1_of_pl2",
						"description": "this will get data from api..",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('http://ergast.com/api/f1/',pipeline().parameters.season_value_parameter,'.json')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "foreach_act_season",
						"description": "This activity will iterate through rounds.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "web_act1_of_pl2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('web_act1_of_pl2').output.MRData.RaceTable.Races",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "web_act2_round_wise_race_result",
									"description": "this will get data from api.",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@concat('http://ergast.com/api/f1/',pipeline().parameters.season_value_parameter,'/',item().round,'/','results.json')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "set_var_round_wise_result",
									"description": "this will write race results data to string type variable.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "web_act2_round_wise_race_result",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "race_results",
										"value": {
											"value": "@{activity('web_act2_round_wise_race_result').output.MRData.RaceTable.Races}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "set_var_season_value",
									"description": "This activity will write season value in one variable.",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "file_name_season",
										"value": {
											"value": "@pipeline().parameters.season_value_parameter",
											"type": "Expression"
										}
									}
								},
								{
									"name": "copy_act_data_round_wise",
									"description": "this will copy data from api to adls in json format.",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "set_var_round_wise_result",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "set_var_season_value",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "mycolumn",
													"value": {
														"value": "@variables('race_results')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "mycolumn",
														"type": "String"
													},
													"sink": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_source_data",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SINK_SEASON_ROUND_WISE_DATA",
											"type": "DatasetReference",
											"parameters": {
												"year_name": {
													"value": "@variables('file_name_season')",
													"type": "Expression"
												},
												"round": {
													"value": "@item().round",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"season_value_parameter": {
						"type": "string"
					}
				},
				"variables": {
					"race_results": {
						"type": "String"
					},
					"file_name_season": {
						"type": "String"
					},
					"season_data_only": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T19:08:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_data')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_SEASON_ROUND_WISE_DATA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_DRIVERS_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "drivers.json",
						"folderPath": "drivers",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_RACES_SEASON_WISE_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(item().season,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Races','/',string(utcnow('yyyyMMdd')))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_SEASONS_DATA_ONLY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "seasons.json",
						"folderPath": {
							"value": "@concat('Seasons','/',string(utcnow('yyyyMMdd')))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_SEASON_ROUND_WISE_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"year_name": {
						"type": "string"
					},
					"round": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().year_name,'_',dataset().round,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Results','/',string(utcnow('yyyyMMdd')))",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_gen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ergast.txt",
						"fileSystem": "test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_gen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_gen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_gen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}